@page
@model OutstandingBreakDownModel
@{
}
<br><br>
@(Html
                                    .Grid(Model.Bills)
                                    .Build(columns =>
                                    {
                                        columns.Add(model => model.BillNumber).Titled("Bill Number");
                                        columns.Add(model => model.BillAmount).Titled("Bill Amount");
                                        columns.Add(model => model.SeriesName).Titled("Operation").Encoded(false).RenderedAs(model => model.SeriesName == null ? "<a href='/Bill/Format2/Print?id=" + model.BillNumber + "&&seccode=" + model.SecretUnlockCode + "'>Print</a> | <a href='/Bill/Format2/Edit?id=" + model.BillNumber + "'>Edit</a> | <a href='/Bill/Delete?id=" + model.BillNumber + "'>Delete</a>" : "<a href='/Bill/Format1/Print?id=" + model.BillNumber + "&&seccode=" + model.SecretUnlockCode + "'>Print</a> | <a href='/Bill/Format1/Edit?id=" + model.BillNumber + "'>Edit</a> | <a href='/Bill/Delete?id=" + model.BillNumber + "'>Delete</a>");
                                    })
                                    .Empty("No data found")
                                    .Filterable()
                                    .Sortable()
)

<h2>Debtor Outstanding Total: @Model.DebtorOutstand</h2>

<h2>Bills Total: @Model.BillAmt</h2>