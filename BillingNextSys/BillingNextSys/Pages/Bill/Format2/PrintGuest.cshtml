@page
@model PrintGuestModel
@{
    Layout = "_LayoutPrint";
    ViewData["Title"] = "Print";
}
<link href="/css/print.css" rel="stylesheet" />
<h2>Print</h2>

<h4>Bill</h4>
<hr />

<div class="form-group">
    <input type="button" value="Print Bill" id="btnprint" class="btn btn-default" onclick="printDiv('printableArea')" />
</div>
<div class="container" id="printableArea">
    <form onsubmit="return false;">
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="jumbotron" style="padding: 5px; border:1px solid; border-radius:5px;">

                <div class="row">
                    <div class="col-xs-3">
                        <img class="img-responsive full-width" src="data:image/png;base64,@Convert.ToBase64String(Model.Bill.Company.CompanyLogoImg)" />
                    </div>
                    <div class="col-xs-9">
                        <h1>@Html.DisplayFor(model => model.Bill.Company.CompanyName)</h1>
                        <h4>@Html.DisplayFor(model => model.Bill.Branch.BranchAddress)</h4>
                        <div class="row">
                            <div class="col-md-6"><h4> <img src="/images/mail.svg" alt="Mail:" width="20px" height="20px" />&nbsp; @Html.DisplayFor(model => model.Bill.Branch.BranchEmail)</h4></div>
                            <div class="col-md-6"><h4> <img src="/images/mobile.png" alt="Mobile Number:" width="20px" height="20px" />&nbsp; @Html.DisplayFor(model => model.Bill.Branch.BranchPhone)</h4></div>
                        </div>
                       
                    </div>
                </div>
       
            </div>
            <center><h3>Professional Invoice</h3></center>
             <hr />
            <div class="col-xs-12">
                <div class="row">
                    <div class="col-xs-6">
                        <address>
                            <strong>Billed To:</strong><br>
                            <div id="to"><h4> @Html.DisplayFor(model => model.Bill.BilledTo)</h4> </div>
                            <div><p id="toaddress">@Html.DisplayFor(model => model.Bill.DebtorGroup.DebtorGroupAddress)</p></div><br>
                        </address>
                    </div>
                    <div class="col-xs-6 text-right">
                        <address>
                            <strong>Invoice Number:</strong> <div id="invoicenum">@Html.DisplayFor(model => model.Bill.BillNumber)</div><br>
                            <strong>Invoice Date:</strong> <div id="invoicedate">@Html.DisplayFor(model => model.Bill.InvoiceDate) </div><br>
                        </address>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title"><strong>Bill summary</strong></h3>
                    </div>
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-condensed order-list" id="billdet">
                                <thead>
                                    <tr>

                                        <td><strong>Debtor Name</strong></td>
                                        <td class="text-left"><strong>Particulars</strong></td>
                                        <td class="text-center"><strong>Period</strong></td>
                                        <td class="text-center"><strong>Year</strong></td>
                                        <td class="text-center"><strong>Amount</strong></td>

                                    </tr>
                                </thead>
                                <tbody id="manupulation">
                                    <!-- foreach ($order->lineItems as $line) or some such thing here -->

                                    @{
                                        var counter = -1;
                                    }

                                    @foreach (var item in Model.BillDetailss)
                                    {
                                        <tr id="row-@counter">
                                            <td>
                                                <p id="dt-@counter">@Html.DisplayFor(modelItem => item.Debtor.DebtorName)</p>
                                            </td>
                                            <td>
                                                <p id="pp-@counter">@Html.DisplayFor(modelItem => item.ParticularsName)</p>
                                            </td>
                                            <td class="text-center">

                                                <p id="year-@counter">@Html.DisplayFor(modelItem => item.YearInfo)</p>
                                            </td>
                                            <td class="text-center">
                                                <p id="period-@counter">@Html.DisplayFor(modelItem => item.Period)</p>    <input style="width:65px; display:none;" type="text" value="@Html.DisplayFor(modelItem => item.Period)" placeholder="Period.." id="periodinput-@counter" />
                                            </td>
                                            <td class="text-center">
                                                <p id="amount-@counter" class="count-me">@Html.DisplayFor(modelItem => item.Amount)</p>    <input style="width:65px; display:none;" type="text" value="@Html.DisplayFor(modelItem => item.Amount)" placeholder="Amount.." id="amountinput-@counter" onchange="calcamount($(this).val(),@counter);" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" />
                                            </td>


                                        </tr>
                                        counter++;
                                    }


                                    <tr>
                                        <td class="thick-line"></td>
                                        <td class="thick-line"></td>
                                        <td class="thick-line"></td>
                                        <td class="thick-line text-center"><strong>Total</strong></td>
                                        <td class="thick-line text-center" id="grandtotal"></td>
                                    </tr>

                                </tbody>
                            </table>

                        </div>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="row">
                                    <div class="col-xs-6">
                                        <address>
                                            <strong>Company's PAN:</strong> &nbsp;<div style="display:inline;" id="pan"> @Html.DisplayFor(model => model.Bill.Company.PAN)</div><br>
                                            <strong>Bank Name:</strong> &nbsp;<div style="display:inline;" id="bname">@Html.DisplayFor(model => model.Bill.Company.BankName)</div><br>
                                            <strong>Account Type:</strong> &nbsp;<div style="display:inline;" id="atype">@Html.DisplayFor(model => model.Bill.Company.AccountType)</div><br>
                                            <strong>Account Number:</strong> &nbsp;<div style="display:inline;" id="anum">@Html.DisplayFor(model => model.Bill.Company.AccountNumber)</div><br>
                                            <strong>IFSC Code:</strong> &nbsp;<div style="display:inline;" id="ifsc">@Html.DisplayFor(model => model.Bill.Company.IFSCcode)</div><br>
                                            <strong>You are Requested to Pay within 7 Days of Receipt of Invoice</strong><br>
                                        </address>
                                    </div>
                                    <div class="col-xs-6 text-right">
                                        <address>
                                            <strong>Amount In Words: </strong> <div style="display:inline;" id="inwords"></div><br>
                                            <strong>For <div style="display:inline;" id="cname">@Html.DisplayFor(model => model.Bill.Company.CompanyName)</div></strong><br>

                                            <img width="100px" height="100px" class="img-responsive  pull-right" src="data:image/png;base64,@Convert.ToBase64String(Model.Bill.Branch.BranchManagerSign)" />
                                            <br><br><br>
                                            <strong class="pull-right">@Html.DisplayFor(model => model.Bill.Branch.BranchManagerName) <br> (Authorised Signatory)</strong><br>

                                        </address>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>window.onload = function() {
    calculateGrandTotal();
     };


    function calculateGrandTotal() {
    var grandTotal = 0;

    $('tr').each(function () {
    $(this).find('.count-me').each(function () {
      var combat = $(this).text().replace(/[^0-9.]/g,'');
      if (!isNaN(combat) && combat.length !== 0) {
        grandTotal += parseFloat(combat);
      }
    });

  });

    document.getElementById('grandtotal').innerHTML = '&#8377;'+grandTotal.toFixed(0);
    convertNumberToWords(grandTotal.toFixed(0));
}


    function convertNumberToWords(amount) {
    var words = new Array();
    words[0] = '';
    words[1] = 'One';
    words[2] = 'Two';
    words[3] = 'Three';
    words[4] = 'Four';
    words[5] = 'Five';
    words[6] = 'Six';
    words[7] = 'Seven';
    words[8] = 'Eight';
    words[9] = 'Nine';
    words[10] = 'Ten';
    words[11] = 'Eleven';
    words[12] = 'Twelve';
    words[13] = 'Thirteen';
    words[14] = 'Fourteen';
    words[15] = 'Fifteen';
    words[16] = 'Sixteen';
    words[17] = 'Seventeen';
    words[18] = 'Eighteen';
    words[19] = 'Nineteen';
    words[20] = 'Twenty';
    words[30] = 'Thirty';
    words[40] = 'Forty';
    words[50] = 'Fifty';
    words[60] = 'Sixty';
    words[70] = 'Seventy';
    words[80] = 'Eighty';
    words[90] = 'Ninety';
    amount = amount.toString();
    var atemp = amount.split(".");
    var number = atemp[0].split(",").join("");
    var n_length = number.length;
    var words_string = "";
    if (n_length <= 9) {
        var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);
        var received_n_array = new Array();
        for (var i = 0; i < n_length; i++) {
            received_n_array[i] = number.substr(i, 1);
        }
        for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {
            n_array[i] = received_n_array[j];
        }
        for (var i = 0, j = 1; i < 9; i++, j++) {
            if (i == 0 || i == 2 || i == 4 || i == 7) {
                if (n_array[i] == 1) {
                    n_array[j] = 10 + parseInt(n_array[j]);
                    n_array[i] = 0;
                }
            }
        }
        value = "";
        for (var i = 0; i < 9; i++) {
            if (i == 0 || i == 2 || i == 4 || i == 7) {
                value = n_array[i] * 10;
            } else {
                value = n_array[i];
            }
            if (value != 0) {
                words_string += words[value] + " ";
            }
            if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {
                words_string += "Crores ";
            }
            if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {
                words_string += "Lakhs ";
            }
            if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {
                words_string += "Thousand ";
            }
            if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {
                words_string += "Hundred and ";
            } else if (i == 6 && value != 0) {
                words_string += "Hundred ";
            }
        }
        words_string = words_string.split("  ").join(" ");
    }
    //return ;
    document.getElementById('inwords').innerHTML = words_string+'.';
}

    function printDiv(divName) {
     var printContents = document.getElementById(divName).innerHTML;
     var originalContents = document.body.innerHTML;

     document.body.innerHTML = printContents;
     document.body.style.marginTop = "-50px";
    document.body.style.marginLeft = "20px";
    document.body.style.marginRight = "20px";
     window.print();

     document.body.innerHTML = originalContents;
    document.body.style.marginTop = "0px";
}</script>