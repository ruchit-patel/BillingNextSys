@page
@using BillingNextSys.Models
@model EditModel
@{
    ViewData["Title"] = "Edit";
}

<link rel="stylesheet" src="/css/print.css" type="text/css" media="all" />
<script src="~/lib/keymaster/keymaster.js"></script>
<h2>Edit</h2>

<h4>Bill</h4>
<hr />
<style>
    .invoice-title h2, .invoice-title h3 {
        display: inline-block;
    }

    .table > tbody > tr > .no-line {
        border-top: none;
    }

    .table > thead > tr > .no-line {
        border-bottom: none;
    }

    .table > tbody > tr > .thick-line {
        border-top: 2px solid;
    }
</style>
<div class="container">
    <form onsubmit="return false;">
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="jumbotron" style="padding: 5px;">
                <input type="hidden" id="billtoid" asp-for="Bill.DebtorGroupID" />
                <input type="hidden" id="seriesinfo" asp-for="Bill.SeriesName" />
                <input type="datetime" id="billdate" asp-for="Bill.BillDate" hidden />
                <input type="hidden" id="toinfo" asp-for="Bill.DebtorGroupID" />
                <input type="hidden" id="secode" asp-for="Bill.SecretUnlockCode" />
                <input type="hidden" id="billdel" asp-for="Bill.BillDelivered" />
                <input type="hidden" id="messsent" asp-for="Bill.MessageSent" />
                <input type="hidden" id="branchid" asp-for="Bill.BranchID" />
                <input type="hidden" id="companyId" asp-for="Bill.CompanyID" />
                <div class="row">
                    <div class="col-md-3">
                        <img class="img-responsive full-width" src="data:image/png;base64,@Convert.ToBase64String(Model.Bill.Company.CompanyLogoImg)" /> @*<img src="https://images-na.ssl-images-amazon.com/images/I/713t5BMNwdL._SX425_.jpg" height="250px" width="300px" style="padding:10px;" />*@
                    </div>
                    <div class="col-md-9">
                        <h1>@Html.DisplayFor(model => model.Bill.Company.CompanyName)</h1>
                        <h2>CHARTERED ACCOUNTANTS</h2>
                        <h4>@Html.DisplayFor(model => model.Bill.Branch.BranchAddress)</h4>
                        <div class="row">
                            <div class="col-md-6"><h4> <img src="/images/mail.svg" alt="Mail:" width="20px" height="20px" />&nbsp; @Html.DisplayFor(model => model.Bill.Branch.BranchEmail)</h4></div>
                            <div class="col-md-6"><h4> <img src="/images/mobile.png" alt="Mobile Number:" width="20px" height="20px" />&nbsp; @Html.DisplayFor(model => model.Bill.Branch.BranchPhone)</h4></div>
                        </div>
                        <div class="row">
                            <div class="col-md-2"></div> <div class="col-md-10"><h3>GSTIN:@Html.DisplayFor(model => model.Bill.Company.GSTIN)</h3></div>
                        </div>
                    </div>
                </div>
                <hr />
                <center><h3>Bill Of Supply</h3></center>
            </div>

            <div class="col-xs-12">
                <div class="row">
                    <div class="col-xs-6">
                        <address>
                            <strong>Billed To:</strong><br>
                            <div id="to"><h4> @Html.DisplayFor(model=>model.Bill.BilledTo)</h4> </div>
                            <div><p id="toaddress">@Html.DisplayFor(model=>model.Bill.DebtorGroup.DebtorGroupAddress)</p></div><br>
                        </address>
                    </div>
                    <div class="col-xs-6 text-right">
                        <address>
                            <strong>Invoice Number:</strong> <div id="invoicenum">@Html.DisplayFor(model=>model.Bill.BillNumber)</div><br>
                            <strong>Invoice Date:</strong> <div id="invoicedate"><input asp-for="Bill.InvoiceDate" id="invcdt" style="width:initial; border-radius:4px; height:35px;" /></div><br>
                        </address>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title"><strong>Bill summary</strong></h3>
                    </div>
                    <div class="panel-body">
                        <div class="">
                            <table class="table table-condensed order-list" id="billdet">
                                <thead>
                                    <tr>
                                        <button class="text-right btn btn-default" id="addoperations" onclick="addInput();"><img src="~/images/add.svg" height='20px' width='20px' />  </button>&nbsp;&nbsp;
                                        <button class="text-right btn btn-default" id="deloperation" onclick="removeRow()"><img src="~/images/minus.png" height='20px' width='20px' />  </button>
                                       
                                        <td><strong>Debtor Name</strong></td>
                                        <td class="text-left"><strong>Particulars</strong></td>
                                        <td class="text-center"><strong>Year</strong></td>
                                        <td class="text-center"><strong>Period</strong></td>
                                        <td class="text-center"><strong>Amount</strong></td>
                                        <td class="text-right"><strong>Operation</strong></td>
                                    </tr>
                                </thead>
                                <tbody id="manupulation">
                                    <!-- foreach ($order->lineItems as $line) or some such thing here -->

                                    @{
                                        var counter = -1;
                                    }

                                    @foreach (var item in Model.BillDetailss)
                                    {
                                <tr id="row-@counter">
                                     <td>
                                     <p id="dt-@counter" style="display:inline-block;">@Html.DisplayFor(modelItem=>item.Debtor.DebtorName)</p>   <input style="display:none;" id="dname-@counter" style="width:250px;" placeholder="Debtor Name.." value="@Html.DisplayFor(modelItem => item.Debtor.DebtorName)" list="debname-@counter" autocomplete="off"><datalist id="debname-@counter"></datalist>       
                                        <input type="hidden" id="did-@counter" value="@Html.DisplayFor(modelItem=>item.DebtorID)"/>
                                     </td>
                                    <td>
                                     <p id="pp-@counter" style="display:inline-block;">@Html.DisplayFor(modelItem=>item.ParticularsName)</p>   <input  id="particulars-@counter" style="width:250px;display:none;" placeholder="Particulars.." value="@Html.DisplayFor(modelItem => item.ParticularsName)" list="parti-@counter" autocomplete="off" onchange="fillparticulars($(this).val(),@counter);" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" onfocusout="fillpdetails(@counter)"><datalist id="parti-@counter"></datalist>       
                                        <input type="hidden" id="pid-@counter" value="@Html.DisplayFor(modelItem=>item.ParticularsID)"/>
                                     </td>
                                    <td class="text-center">
                                    
                                       <p id="year-@counter" style="display: inline-block;">@Html.DisplayFor(modelItem=>item.YearInfo)</p>  <select style="display:none;" id="yearsel-@counter" class="form-control" asp-items="Html.GetEnumSelectList(typeof(YearInfo))"> </select>  
                                    </td>
                                    <td class="text-center">
                                      <p id="period-@counter" style="display: inline-block;">@Html.DisplayFor(modelItem=>item.Period)</p>    <input style="width:65px; display:none;" type="text" value="@Html.DisplayFor(modelItem => item.Period)" placeholder="Period.." id="periodinput-@counter" />  
                                    </td>
                                    <td class="text-center">
                                        <p id="amount-@counter" class="count-me" style="display: inline-block;">@Html.DisplayFor(modelItem => item.Amount)</p>    <input style="width:65px; display:none;" type="text" value="@Html.DisplayFor(modelItem => item.Amount)" placeholder="Amount.." id="amountinput-@counter" onchange="calcamount($(this).val(),@counter);" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" />
                                    </td>

                                    <td class="text-right" id="opr-@counter">
                                        <button onclick="editcont(this.id,@counter)" id="et-@Html.DisplayFor(modelItem => item.BillDetailsID)" class="btn btn-default"><img src="/images/edit.svg" height="20px" width="20px" class="img-responsive" /></button>  <button style="display:none;" onclick="savecont(this.id,@Html.DisplayFor(modelItem => item.BillDetailsID))" id="save-@counter" class="btn btn-default"><img src="/images/save.png" height="20px" width="20px" /></button> <button onclick="delcont(this.id,@Html.DisplayFor(modelItem => item.BillDetailsID))" id="del-@counter" class="btn btn-default"><img src="/images/delete.png" height="20px" width="20px" class="img-responsive" /></button>  
                                    </td>
                                </tr>
                                    counter++;
                                    }

                                    <tr>
                                        <td class="thick-line"></td>
                                        <td class="thick-line"></td>
                                        <td class="thick-line"></td>
                                        <td class="thick-line text-center"><strong>Total</strong></td>
                                        <td class="thick-line text-center" id="grandtotal"></td>
                                    </tr>

                                </tbody>
                            </table>
                            <input type="hidden" value="@counter" id="lastcount" />
                        </div>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="row">
                                    <div class="col-xs-6">
                                        <address>
                                            <strong>Company's PAN:</strong> &nbsp;<div style="display:inline;" id="pan"> @Html.DisplayFor(model => model.Bill.Company.PAN)</div><br>
                                            <strong>Bank Name:</strong> &nbsp;<div style="display:inline;" id="bname">@Html.DisplayFor(model => model.Bill.Company.BankName)</div><br>
                                            <strong>Account Type:</strong> &nbsp;<div style="display:inline;" id="atype">@Html.DisplayFor(model => model.Bill.Company.AccountType)</div><br>
                                            <strong>Account Number:</strong> &nbsp;<div style="display:inline;" id="anum">@Html.DisplayFor(model => model.Bill.Company.AccountNumber)</div><br>
                                            <strong>IFSC Code:</strong> &nbsp;<div style="display:inline;" id="ifsc">@Html.DisplayFor(model => model.Bill.Company.IFSCcode)</div><br>
                                        </address>
                                    </div>
                                    <div class="col-xs-6 text-right">
                                        <address>
                                            <strong>Amount In Words: </strong> <div style="display:inline;" id="inwords"></div><br>
                                            <strong>For <div style="display:inline;" id="cname">@Html.DisplayFor(model => model.Bill.Company.CompanyName)</div></strong><br>
                                            <img width="100px" height="100px" class="img-responsive  pull-right" src="data:image/png;base64,@Convert.ToBase64String(Model.Bill.Branch.BranchManagerSign)" />
                                            <br><br><br>
                                            <strong class="pull-right">@Html.DisplayFor(model => model.Bill.Branch.BranchManagerName) <br> (Authorised Signatory)</strong><br>

                                        </address>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div class="form-group">
    <input type="button" value="Edit Bill" id="btnedit" class="btn btn-default" onclick="editbill()" />
</div>
<div>
    <a asp-page="/Bill/Format2/Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    var counter=0;
     var diffcount=0;
    window.onload = function() {
     //filladress();
     document.getElementById("del--1").style.display="none";
           document.getElementById("deloperation").style.display = "none";
        key('ctrl+1', function(){ document.getElementById("addoperations").click(); return false });
        key('ctrl+2', function(){ document.getElementById("deloperation").click(); return false });
    counter = +($('#lastcount').val())-1;
    fillDebtorInfo(-1);
    resizeel();
    calculateGrandTotal();
     };

    function resizeel()
    {
    for (i = -1; i <= counter; i++)
        {
                    var particulars=document.getElementById('particulars-'+i);
                if(particulars.value.length>0){
                    particulars.style.width = ((particulars.value.length + 1) * 8) + 'px';
                }else{
                  particulars.style.width = ((particulars.getAttribute('placeholder').length + 1) * 8) + 'px';
                }
        }
    }


     function fillDebtorInfo(num)
    {
                    var dataList = document.getElementById('debname-'+num);

                    var dinfoa = $("#billtoid").val();
                    var opt = {};
                    opt.url = "/Bill/Format2/Create?id="+dinfoa+"&&handler=BillToDebtorInfo";
                    opt.type = "GET";

                    opt.dataType = "json";

                    opt.success = function (data) {
                        $("#debname-"+num).empty();

                         data.forEach(function (element) {
                                var option = document.createElement('option');

                                option.value = element.debtorName;
                                option.id = element.debtorID;

                                 dataList.appendChild(option);
                        });
                    };
                    opt.error = function () {

                             var option = document.createElement('option');

                              option.value = "Couldn't Fetch Debtor Information";

                              dataList.appendChild(option);
                    };
                    $.ajax(opt);


    }

    function editcont(btnid,count)
    {
    diffcount=$('#amount-'+count).text().replace(/[^0-9.]/g,'');
    $('#amountinput-'+count).val($('#amountinput-'+count).val().replace(/[^0-9.]/g,''));

     setSelectedIndex(document.getElementById("yearsel-"+count),$('#year-'+count).text());
      document.getElementById(btnid).style.display = "none";
     document.getElementById("save-"+count).style.display = "inline-block";
    document.getElementById("dt-"+count).style.display = "none";
     document.getElementById("dname-"+count).style.display = "inline-block";
      document.getElementById("pp-"+count).style.display = "none";
     document.getElementById("particulars-"+count).style.display = "inline-block";
     document.getElementById("year-"+count).style.display = "none";
     document.getElementById("yearsel-"+count).style.display = "inline-block";
     document.getElementById("period-"+count).style.display = "none";
    document.getElementById("periodinput-"+count).style.display = "inline-block";
     document.getElementById("amount-"+count).style.display = "none";
    document.getElementById("amountinput-"+count).style.display = "inline-block";
    fillDebtorInfo(count);

    }




    function delcont(btnid,count)
    {
           var options = {};
            alert("here at del with "+btnid+" : " + count);
            var billamt=$('#amount-'+btnid.substring(4)).text().replace(/[^0-9.]/g,'').trim();

        alert("here"+billamt+" and "+$('#billtoid').val());
           options.url = "/Bill/Format1/Edit?id="+count+"&&billamt="+billamt+"&&debid="+$('#billtoid').val()+"&&handler=DeleteBillDetails";
           options.type = "DELETE";
           options.dataType = "html";
           options.beforeSend = function (xhr) {
           xhr.setRequestHeader("MY-XSRF-TOKEN",
           $('input:hidden[name="__RequestVerificationToken"]').val());
           };
           options.success = function (msg) {

            if(msg=='"Deleted Successfully! Remove Row."')
             {

                document.getElementById("row-"+btnid.substring(4)).style.display = "none";
                 document.getElementById("row-"+btnid.substring(4)).innerHTML="<p>dummy row</p>";
                calculateGrandTotal();


                     var billlid=$('#invoicenum').text();
                 var options1 = {};
                options1.url = "/Bill/Format1/Edit?id="+billlid+"&&handler=UpdateBill";
                options1.type = "PUT";

                var obj1 = {};
                obj1.BillNumber = billlid;
                obj1.BilledTo = $('#to').text();
                obj1.BillAmount = $('#grandtotal').text().substring(1, $('#grandtotal').text().length);
                obj1.InvoiceDate = $('#invcdt').val();
                obj1.DebtorGroupID =  $('#billtoid').val();
                obj1.BillDate =  $('#billdate').val();
                obj1.BillDelivered=$('#billdel').val();
                obj1.SecretUnlockCode=$('#secode').val();
                obj1.MessageSent=$('#messsent').val();
                obj1.BranchID=$('#branchid').val();
                obj1.CompanyID=$('#companyId').val();


            options1.data = JSON.stringify(obj1);

            options1.contentType = "application/json";
            options1.dataType = "html";

            options1.beforeSend = function (xhr) {
                xhr.setRequestHeader("MY-XSRF-TOKEN",
                $('input:hidden[name="__RequestVerificationToken"]').val());
                };
            options1.success = function (msg) {
           };
            options1.error = function () {
                alert("Error Occured while updating.");
            };
            $.ajax(options1);


             }
            else
             {
                alert("Exception occured while handling the return data.");
             }
            };
           options.error = function () {
                alert("Error Occured while deleting.");
            };
       $.ajax(options);
    }






    function savecont(btnid,billid)
    {
            var ttamt=parseFloat($("#amountinput-"+btnid.substring(5)).val())-diffcount;
            var options = {};
            options.url = "/Bill/Format1/Edit?id="+billid+"&&damt="+ttamt+"&&handler=UpdateBillDetails";
            options.type = "PUT";


            var obj = {};
            obj.BillDetailsID = billid;

            obj.ParticularsName = $("#particulars-"+btnid.substring(5)).val();
            obj.TaxableValue = $("#amountinput-"+btnid.substring(5)).val();
            obj.Period = $("#periodinput-"+btnid.substring(5)).val();
            obj.YearInfo =  $("#yearsel-"+btnid.substring(5)).val();
            obj.Amount =  $("#amountinput-"+btnid.substring(5)).val();
            obj.CompanyID=$('#companyId').val();

             var pinfoa=$("#parti-"+btnid.substring(5)).find('option[value="' + obj.ParticularsName + '"]').attr('id');
                 if(pinfoa==null || pinfoa==="undefined")
                {
                pinfoa=$('#pid-'+btnid.substring(5)).val();
                }
                 $('#pid-'+btnid.substring(5)).val(pinfoa);


            obj.ParticularsID =pinfoa;
            obj.DebtorGroupID =$('#billtoid').val();
            obj.BillNumber=$('#invoicenum').text();

            var dnamm= $("#dname-"+btnid.substring(5)).val();
              var dinfoa=$("#debname-"+btnid.substring(5)).find('option[value="' + dnamm + '"]').attr('id');
                 if(dinfoa==null || dinfoa==="undefined")
                {
                dinfoa=$('#did-'+btnid.substring(5)).val();
                }
                 $('#did-'+btnid.substring(5)).val(dinfoa);


            obj.DebtorID=dinfoa;
            if(obj.DebtorID==null || obj.DebtorID=="")
            {
                alert("Sub-Debtor is Not Set Correctly");
                return false;
            }
             if(obj.ParticularsID==null || obj.ParticularsID=="")
            {
                alert("Particulars id Not Set Correctly");
                return false;
            }


            options.data = JSON.stringify(obj);
            options.contentType = "application/json";
            options.dataType = "html";

            options.beforeSend = function (xhr) {
                xhr.setRequestHeader("MY-XSRF-TOKEN",
                $('input:hidden[name="__RequestVerificationToken"]').val());
                };
            options.success = function (msg) {



                var billlid=$('#invoicenum').text();
         var options1 = {};
        options1.url = "/Bill/Format2/Edit?id="+billlid+"&&handler=UpdateBill2";
        options1.type = "PUT";

                var obj1 = {};
                obj1.BillNumber = billlid;
                obj1.BilledTo = $('#to').text();
                obj1.BillAmount = $('#grandtotal').text().substring(1, $('#grandtotal').text().length);
                obj1.InvoiceDate = $('#invcdt').val();
                obj1.DebtorGroupID =  $('#billtoid').val();
                obj1.BillDate =  $('#billdate').val();
                obj1.BillDelivered=$('#billdel').val();
                obj1.SecretUnlockCode=$('#secode').val();
                obj1.MessageSent=$('#messsent').val();
                obj1.BranchID=$('#branchid').val();
                obj1.CompanyID=$('#companyId').val();

                options1.data = JSON.stringify(obj1);

                options1.contentType = "application/json";
                options1.dataType = "html";

                options1.beforeSend = function (xhr) {
                    xhr.setRequestHeader("MY-XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
                    };
                options1.success = function (msg) {
                      };
                    options1.error = function () {
                        alert("Error Occured while updating bill amount.");
                    };
                    $.ajax(options1);





                 var countid=btnid.substring(5);

                     document.getElementById("pp-"+countid).innerHTML=obj.ParticularsName;
                     document.getElementById("dt-"+countid).innerHTML=$('#dname-'+btnid.substring(5)).val();
                     document.getElementById("amountinput-"+countid).innerHTML=obj.TaxableValue;
                     //$('#year-'+countid).text(''+);
                     $('#period-'+countid).text(''+obj.Period);
                     $('#amount-'+countid).text(''+obj.TaxableValue);
                     $('#year-'+countid).text($("#yearsel-"+countid+" option:selected").text());

                 document.getElementById(btnid).style.display = "none";
                 document.getElementById("et-"+billid).style.display = "inline-block";
                 document.getElementById("dt-"+btnid.substring(5)).style.display = "inline-block";
                 document.getElementById("dname-"+btnid.substring(5)).style.display = "none";
                 document.getElementById("pp-"+btnid.substring(5)).style.display = "inline-block";
                 document.getElementById("particulars-"+btnid.substring(5)).style.display = "none";
                 document.getElementById("period-"+btnid.substring(5)).style.display = "inline-block";
                 document.getElementById("periodinput-"+btnid.substring(5)).style.display = "none";
                 document.getElementById("year-"+btnid.substring(5)).style.display = "inline-block";
                document.getElementById("yearsel-"+btnid.substring(5)).style.display = "none";
                 document.getElementById("amount-"+btnid.substring(5)).style.display = "inline-block";
                 document.getElementById("amountinput-"+btnid.substring(5)).style.display = "none";


            };
            options.error = function () {
                alert("Error Occured while updating.");
            };
            $.ajax(options);

    }


    function setSelectedIndex(s, v)

        {

                for ( var i = 0; i < s.options.length; i++ ) {

                    if ( s.options[i].text == v ) {

                        s.options[i].selected = true;

                        return;

                    }

                }

        }





    function fillparticulars(pname,idval)
    {

      var dataList = document.getElementById("parti-"+idval);

    var options = {};
    options.url = "/Bill/Format1/Create?str="+pname+"&&handler=Particulars";
    options.type = "GET";
    options.dataType = "json";

    options.success = function (data) {

     $("#parti-"+idval).empty();
    data.forEach(function (element) {

     var option = document.createElement('option');
                option.value = element.particularsName;
             option.id = element.particularsID;
       dataList.appendChild(option);


           });

    };
    options.error = function () {
     var option = document.createElement('option');

          option.value = "Couldn't Fetch Particulars Information";

       dataList.appendChild(option);
    };
    $.ajax(options);

    }

    function fillvalues(dname)
    {
    var dataList = document.getElementById('tosearch');

    var options = {};
    options.url = "/Bill/Format1/Create?str="+dname+"&&handler=BillTo";
    options.type = "GET";
    options.dataType = "json";
    options.success = function (data) {

     $("#tosearch").empty();
    data.forEach(function (element) {

     var option = document.createElement('option');

          option.value = element.debtorGroupName;
             option.id = element.debtorGroupID;

       dataList.appendChild(option);

           });

    };
    options.error = function () {
     var option = document.createElement('option');

          option.value = "Couldn't Fetch Debtor Information";

       dataList.appendChild(option);
    };
    $.ajax(options);
    }




    function fillpdetails(idval)
    {
       var x = document.getElementById("parti-"+idval);
    var i;
    for (i = 0; i < x.options.length; i++) {
        if(x.options[i].value!= $('#particulars-'+idval).val())
        {
            $('#particulars-'+idval).val('');
        }
    }
    var particulars=document.getElementById('particulars-'+idval);
    if(particulars.value.length>0){
        particulars.style.width = ((particulars.value.length + 1) * 8) + 'px';
    }else{
      particulars.style.width = ((particulars.getAttribute('placeholder').length + 1) * 8) + 'px';
    }
     var pinfoa = $("#parti-"+idval+" option[value='" + $('#particulars-'+idval).val() + "']").attr('id');
    var options = {};
    options.url = "/Bill/Format1/Create?id="+pinfoa+"&&handler=ParticularsDetails";
    options.type = "GET";
    options.dataType = "json";
    options.success = function (data) {
        $("#amountinput-"+idval).val(data.amount);
        calcamount(data.amount,idval);
    };
    options.error = function () {
     $("#saccode-"+idval).val("-1");
     $("#taxableval-"+idval).val("-1");
    };
    $.ajax(options);
  }

function calcamount(pamount,idval)
    {
     var taxableval=document.getElementById('amountinput-'+idval);
        if(taxableval.value.length>0){
            taxableval.style.width = ((taxableval.value.length + 3) * 8) + 'px';
        }else{
          taxableval.style.width = ((taxableval.getAttribute('placeholder').length + 3) * 8) + 'px';
        }
        var total=+pamount;
    document.getElementById('amount-'+idval).innerHTML = total.toFixed(0);

    calculateGrandTotal();
    }

  function addInput(){
       counter++;


     var rowid='row-'+counter;
       var newRow = $("<tr id='row-"+counter+"'>");
        var cols = "";
            cols+='<td><input id="dname-'+counter+'" style="width:250px;" placeholder="Debtor Name.." list="debname-'+counter+'" autocomplete="off"><datalist id="debname-'+counter+'"></datalist> </td>';
         cols+='<td><input id="particulars-' + counter + '" style="width:250px;" placeholder="Particulars.." list="parti-' + counter + '" autocomplete="off" onchange="fillparticulars($(this).val(),' + counter + ');" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" onfocusout="fillpdetails(' + counter + ')"><datalist id="parti-' + counter + '"></datalist></td>';
          cols+='<td class="text-center"><select id="yearsel-'+counter+'"></select></td>';
            cols+= '<td class="text-center"><input style="width:65px; " type="text" placeholder="Period.." id="periodinput-'+counter+'" /></td>';
             cols+='<td class="text-center count-me">  <p id="amount-'+counter+'" style="display: none;"></p>  <input style="width:65px;" type="number" placeholder="Amount.." id="amountinput-' + counter + '" onchange="calcamount($(this).val(),' + counter + ');" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" /></td>';
                 var ooptions = $("#yearsel--1 > option").clone();


     document.getElementById("deloperation").style.display = "inline";
        newRow.append(cols);
        $('#billdet > tbody > tr').eq( counter ).after(newRow);
         $('#yearsel-'+counter).append(ooptions);
        fillDebtorInfo(counter);
       // $("table.order-list").append(newRow);


}
    function removeRow()
    {
    var comval= $('#lastcount').val();

        if(counter==comval)
         {
            document.getElementById("deloperation").style.display = "none";
            $('#row-'+counter).remove();
            counter -= 1;
            calculateGrandTotal();
         }
        else
        {
            $('#row-'+counter).remove();
            counter -= 1;
            calculateGrandTotal();
        }
    }

    function calculateGrandTotal() {
    var grandTotal = 0;

    $('tr').each(function () {
   // var sum = 0;
    $(this).find('.count-me').each(function () {
      var combat = $(this).text().replace(/[^0-9.]/g,'');
      if (!isNaN(combat) && combat.length !== 0) {

        grandTotal += parseFloat(combat);
      }
    });

  });

    document.getElementById('grandtotal').innerHTML = '&#8377;'+grandTotal.toFixed(0);
    convertNumberToWords(grandTotal.toFixed(0));
}

function convertNumberToWords(amount) {
    var words = new Array();
    words[0] = '';
    words[1] = 'One';
    words[2] = 'Two';
    words[3] = 'Three';
    words[4] = 'Four';
    words[5] = 'Five';
    words[6] = 'Six';
    words[7] = 'Seven';
    words[8] = 'Eight';
    words[9] = 'Nine';
    words[10] = 'Ten';
    words[11] = 'Eleven';
    words[12] = 'Twelve';
    words[13] = 'Thirteen';
    words[14] = 'Fourteen';
    words[15] = 'Fifteen';
    words[16] = 'Sixteen';
    words[17] = 'Seventeen';
    words[18] = 'Eighteen';
    words[19] = 'Nineteen';
    words[20] = 'Twenty';
    words[30] = 'Thirty';
    words[40] = 'Forty';
    words[50] = 'Fifty';
    words[60] = 'Sixty';
    words[70] = 'Seventy';
    words[80] = 'Eighty';
    words[90] = 'Ninety';
    amount = amount.toString();
    var atemp = amount.split(".");
    var number = atemp[0].split(",").join("");
    var n_length = number.length;
    var words_string = "";
    if (n_length <= 9) {
        var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);
        var received_n_array = new Array();
        for (var i = 0; i < n_length; i++) {
            received_n_array[i] = number.substr(i, 1);
        }
        for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {
            n_array[i] = received_n_array[j];
        }
        for (var i = 0, j = 1; i < 9; i++, j++) {
            if (i == 0 || i == 2 || i == 4 || i == 7) {
                if (n_array[i] == 1) {
                    n_array[j] = 10 + parseInt(n_array[j]);
                    n_array[i] = 0;
                }
            }
        }
        value = "";
        for (var i = 0; i < 9; i++) {
            if (i == 0 || i == 2 || i == 4 || i == 7) {
                value = n_array[i] * 10;
            } else {
                value = n_array[i];
            }
            if (value != 0) {
                words_string += words[value] + " ";
            }
            if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {
                words_string += "Crores ";
            }
            if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {
                words_string += "Lakhs ";
            }
            if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {
                words_string += "Thousand ";
            }
            if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {
                words_string += "Hundred and ";
            } else if (i == 6 && value != 0) {
                words_string += "Hundred ";
            }
        }
        words_string = words_string.split("  ").join(" ");
    }
    //return ;
    document.getElementById('inwords').innerHTML = words_string+'.';
}


    function editbill()
    {

     var countdebout=0;
    var billlid=$('#invoicenum').text();
     var options = {};
    options.url = "/Bill/Format2/Edit?id="+billlid+"&&handler=UpdateBill2";
    options.type = "PUT";

            var obj = {};
            obj.BillNumber = billlid;
            obj.BilledTo = $('#to').text();
            obj.BillAmount = $('#grandtotal').text().substring(1, $('#grandtotal').text().length);
            obj.InvoiceDate = $('#invcdt').val();
            obj.DebtorGroupID =  $('#billtoid').val();
            obj.BillDate =  $('#billdate').val();
            obj.BillDelivered=$('#billdel').val();
            obj.SecretUnlockCode=$('#secode').val();
            obj.MessageSent=$('#messsent').val();
            obj.BranchID=$('#branchid').val();
            obj.CompanyID=$('#companyId').val();

            options.data = JSON.stringify(obj);

            options.contentType = "application/json";
            options.dataType = "html";

            options.beforeSend = function (xhr) {
                xhr.setRequestHeader("MY-XSRF-TOKEN",
                $('input:hidden[name="__RequestVerificationToken"]').val());
                };
            options.success = function (msg) {

                     $('#billdet tr').each(function(row, tr){

                     if(typeof($(tr).find('td:eq(0)').find("input").val())!=="undefined")
                      {
                         var comval= $('#lastcount').val();
                         var rowid=$(tr).attr('id').substring(4);
                         if(rowid>=comval)
                         {

                                var options = {};
                                options.url = "/Bill/Format2/Create?handler=InsertBillDetails";
                                options.type = "POST";


                                var obj = {};

                countdebout+=parseFloat($(tr).find('td:eq(4)').find("input").val());
                obj.ParticularsName =  $(tr).find('td:eq(1)').find("input").val();
                obj.TaxableValue = $(tr).find('td:eq(4)').find("input").val();
                obj.Period = $(tr).find('td:eq(3)').find("input").val();
                obj.YearInfo = $(tr).find('td:eq(2)').find(":selected").val();
                obj.Amount = $(tr).find('td:eq(4)').find("input").val();
                obj.CompanyID=$('#companyId').val();

                 var inputid=$(tr).find('td:eq(1)').find("input").val();
                 obj.ParticularsID= $(tr).find('td:eq(1)').find("datalist").find('option[value="' + inputid + '"]').attr('id');


                obj.DebtorGroupID =$('#billtoid').val();
                obj.BillNumber=$('#invoicenum').text();

                      var dinputid=$(tr).find('td:eq(0)').find("input").val();
                     obj.DebtorID= $(tr).find('td:eq(0)').find("datalist").find('option[value="' + dinputid + '"]').attr('id');




                                options.data = JSON.stringify(obj);

                                options.contentType = "application/json; charset=utf-8";
                                options.dataType = "json";

                                options.beforeSend = function (xhr) {
                                    xhr.setRequestHeader("MY-XSRF-TOKEN",
                                    $('input:hidden[name="__RequestVerificationToken"]').val());
                                };
                                options.success = function (msg) {


                                };
                                options.error = function () {

                                alert("error");
                                };
                                $.ajax(options);
                        }
                      }

                    });
                savedebout(countdebout);
                window.location.pathname="/Bill/Format2/Index";
            };
            options.error = function () {
                alert("Error Occured while updating.");
            };
            $.ajax(options);

}

    function savedebout(debamt)
    {
         var options = {};
            options.url = "/Bill/Format1/Edit?debout="+debamt+"&&dgid="+$('#billtoid').val()+"&&handler=UpdateDebOut";
            options.type = "GET";
            options.dataType = "json";

            options.success = function (data) {


            };
            options.error = function () {
            alert("Error Updating Debtor Oustanding Amount");
            };
            $.ajax(options);
    }
</script>