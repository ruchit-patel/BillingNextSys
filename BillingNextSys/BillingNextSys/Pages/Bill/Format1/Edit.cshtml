@page
@using BillingNextSys.Models
@model EditModel
@{
    ViewData["Title"] = "Edit";
}

<link rel="stylesheet" src="/css/print.css" type="text/css" media="all" />
<script src="~/lib/keymaster/keymaster.js"></script>
<h2>Edit</h2>

<h4>Bill</h4>
<hr />
<style>
    .invoice-title h2, .invoice-title h3 {
        display: inline-block;
    }

    .table > tbody > tr > .no-line {
        border-top: none;
    }

    .table > thead > tr > .no-line {
        border-bottom: none;
    }

    .table > tbody > tr > .thick-line {
        border-top: 2px solid;
    }
</style>
<div class="container">
    <form onsubmit="return false;">
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="jumbotron" style="padding: 5px;">
                <input type="hidden" id="billtoid" asp-for="Bill.DebtorGroupID" />
                <input type="hidden" id="seriesinfo" asp-for="Bill.SeriesName" />
                <input type="datetime" id="billdate" asp-for="Bill.BillDate" hidden />
                <input type="hidden" id="billactnum" asp-for="Bill.BillActNum" />

                <div class="row">
                    <div class="col-md-3">
                        <img class="img-responsive full-width" src="data:image/png;base64,@Convert.ToBase64String(Model.Companies.FirstOrDefault().CompanyLogoImg)" /> @*<img src="https://images-na.ssl-images-amazon.com/images/I/713t5BMNwdL._SX425_.jpg" height="250px" width="300px" style="padding:10px;" />*@
                    </div>
                    <div class="col-md-9">
                        <h1>@Html.DisplayFor(model => model.Companies.FirstOrDefault().CompanyName)</h1>
                        <h2>CHARTERED ACCOUNTANTS</h2>
                        <h4>@Html.DisplayFor(model => model.Branches.FirstOrDefault().BranchAddress)</h4>
                        <div class="row">
                            <div class="col-md-6"><h4> <img src="/images/mail.svg" alt="Mail:" width="20px" height="20px" />&nbsp; @Html.DisplayFor(model => model.Branches.FirstOrDefault().BranchEmail)</h4></div>
                            <div class="col-md-6"><h4> <img src="/images/mobile.png" alt="Mobile Number:" width="20px" height="20px" />&nbsp; @Html.DisplayFor(model => model.Branches.FirstOrDefault().BranchPhone)</h4></div>
                        </div>
                        <div class="row">
                            <div class="col-md-2"></div> <div class="col-md-10"><h3>GSTIN:@Html.DisplayFor(model => model.Companies.FirstOrDefault().GSTIN)</h3></div>
                        </div>
                    </div>
                </div>
                <hr />
                <center><h3>Tax Invoice</h3></center>
            </div>

            <div class="col-xs-12">
                <div class="row">
                    <div class="col-xs-6">
                        <address>
                            <strong>Billed To:</strong><br>
                            <div id="to"> <input id="toinfo" class="form-control" style="width:300px;" list="tosearch" autocomplete="off" onchange="fillvalues($(this).val());" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" onfocusout="filladress()" value="@Html.DisplayFor(model=>model.Bill.BilledTo)" readonly> <datalist id="tosearch"></datalist></div>
                            <div><p id="toaddress"></p></div><br>
                            <strong>GSTIN: </strong><div><p id="togstin"></p></div>
                        </address>
                    </div>
                    <div class="col-xs-6 text-right">
                        <address>
                            <strong>Invoice Number:</strong> <div id="invoicenum">@Html.DisplayFor(model=>model.Bill.BillNumber)</div><br>
                            <strong>Invoice Date:</strong> <div id="invoicedate"><input asp-for="Bill.InvoiceDate" id="invcdt" style="width:initial; border-radius:4px; height:35px;" /></div><br>
                            <strong>Place Of Supply:</strong> <div id="placeofsupply"><select id="placeofsup" asp-for="Bill.PlaceOfSupply" asp-items="Html.GetEnumSelectList(typeof(PlaceOfSupply))" style="width:initial; border-radius:4px; height:35px;"> </select></div><br>
                        </address>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title"><strong>Bill summary</strong></h3>
                    </div>
                    <div class="panel-body">
                        <div class="">
                            <table class="table table-condensed order-list" id="billdet">
                                <thead>
                                    <tr>
                                        <button class="text-right btn btn-default" id="addoperations" onclick="addInput();"><img src="~/images/add.svg" height='20px' width='20px' />  </button>&nbsp;&nbsp;
                                        <button class="text-right btn btn-default" id="deloperation" onclick="removeRow()"><img src="~/images/minus.png" height='20px' width='20px' />  </button>
                                        <td><strong>Description of Service</strong></td>
                                        <td class="text-center"><strong>SAC Code</strong></td>
                                        <td class="text-center"><strong>Taxable Value</strong></td>
                                        <td class="text-center"><strong>CGST &#64 9 &#37 </strong></td>
                                        <td class="text-center"><strong>SGST &#64 9 &#37</strong></td>
                                        <td class="text-center"><strong>Amount</strong></td>
                                        <td class="text-right"><strong>Operation</strong></td>
                                    </tr>
                                </thead>
                                <tbody id="manupulation">
                                    <!-- foreach ($order->lineItems as $line) or some such thing here -->

                                    @{
                                        var counter = -1;
                                    }

                                    @foreach (var item in Model.BillDetailss)
                                    {
                                <tr id="row-@counter">
                                    <td>
                                     <p id="pp-@counter" style="display:inline-block;">@Html.DisplayFor(modelItem=>item.ParticularsName)</p>   <input style="display:none;" id="particulars-@counter" style="width:250px;" placeholder="Particulars.." value="@Html.DisplayFor(modelItem => item.ParticularsName)" list="parti-@counter" autocomplete="off" onchange="fillparticulars($(this).val(),@counter);" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" onfocusout="fillpdetails(@counter)"><datalist id="parti-@counter"></datalist>       
                                        <input type="hidden" id="pid-@counter" value="@Html.DisplayFor(modelItem=>item.ParticularsID)"/>
                                     </td>
                                    <td class="text-center">
                                       <p id="psac-@counter" style="display: inline-block;">@Html.DisplayFor(modelItem=>item.Particulars.SACCode)</p>   <input style="display:none; width:65px;" placeholder="SAC Code.." value="@Html.DisplayFor(modelItem => item.Particulars.SACCode)" type="number" id="saccode-@counter" />  
                                    </td>
                                    <td class="text-center">
                                      <p id="ptamount-@counter" style="display: inline-block;">@Html.DisplayFor(modelItem=>item.TaxableValue)</p>    <input style="width:65px; display:none;" type="text" value="@Html.DisplayFor(modelItem => item.TaxableValue)" placeholder="Amount.." id="taxableval-@counter" onchange="calcamount($(this).val(),@counter);" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" />  
                                    </td>
                                    <td class="text-center" id="cgst-@counter">
                                        @Html.DisplayFor(modelItem => item.CGSTAmount)
                                    </td>
                                    <td class="text-center" id="sgst-@counter">
                                        @Html.DisplayFor(modelItem => item.SGSTAmount)
                                    </td>
                                    <td class="text-right count-me" id="pamount-@counter">
                                        @Html.DisplayFor(modelItem => item.Amount)
                                    </td>
                                    <td class="text-right" id="opr-@counter">
                                        <button onclick="editcont(this.id,@counter)" id="et-@Html.DisplayFor(modelItem => item.BillDetailsID)" class="btn btn-default"><img src="/images/edit.svg" height="20px" width="20px" class="img-responsive" /></button>  <button style="display:none;" onclick="savecont(this.id,@Html.DisplayFor(modelItem => item.BillDetailsID))" id="save-@counter" class="btn btn-default"><img src="/images/save.png" height="20px" width="20px" /></button> <button onclick="delcont(this.id,@Html.DisplayFor(modelItem => item.BillDetailsID))" id="del-@counter" class="btn btn-default"><img src="/images/delete.png" height="20px" width="20px" class="img-responsive" /></button>  
                                    </td>
                                </tr>
                                    counter++;
                                    }

                                    @*<tr id="row-1" class="">
            <td><input id="particulars-1" style="width:250px;" placeholder="Particulars.." list="parti-1" autocomplete="off" onchange="fillparticulars($(this).val(),-1);" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" onfocusout="fillpdetails(-1)"><datalist id="parti-1"></datalist></td>
            <td class="text-center"><input style="width:65px;" placeholder="SAC Code.." type="number" id="saccode-1" /></td>
            <td class="text-center"><input style="width:65px;" type="number" placeholder="Amount.." id="taxableval-1" onchange="calcamount($(this).val(),-1);" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" /></td>
            <td class="text-center" id="cgst-1"></td>
            <td class="text-center" id="sgst-1"></td>
            <td class="text-right count-me" id="pamount-1"></td>

        </tr>*@

                                    <tr>
                                        <td class="thick-line"></td>
                                        <td class="thick-line"></td>
                                        <td class="thick-line"></td>
                                        <td class="thick-line"></td>
                                        <td class="thick-line text-center"><strong>Total</strong></td>
                                        <td class="thick-line text-right" id="grandtotal"></td>
                                    </tr>
                                    @*<tr>
            <td class="no-line text-left"><strong>Amount In Words:</strong></td>
            <td class="no-line text-center">Seven Thousand Six Hundred Seventy.</td>
            <td class="no-line"></td>
            <td class="no-line"></td>
            <td class="no-line"></td>
            <td class="no-line"></td>
        </tr>*@
                                </tbody>
                            </table>
                            <input type="hidden" value="@counter" id="lastcount" />
                        </div>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="row">
                                    <div class="col-xs-6">
                                        <address>
                                            <strong>Company's PAN:</strong> &nbsp;<div style="display:inline;" id="pan"> @Html.DisplayFor(model => model.Companies.FirstOrDefault().PAN)</div><br>
                                            <strong>Bank Name:</strong> &nbsp;<div style="display:inline;" id="bname">@Html.DisplayFor(model => model.Companies.FirstOrDefault().BankName)</div><br>
                                            <strong>Account Type:</strong> &nbsp;<div style="display:inline;" id="atype">@Html.DisplayFor(model => model.Companies.FirstOrDefault().AccountType)</div><br>
                                            <strong>Account Number:</strong> &nbsp;<div style="display:inline;" id="anum">@Html.DisplayFor(model => model.Companies.FirstOrDefault().AccountNumber)</div><br>
                                            <strong>IFSC Code:</strong> &nbsp;<div style="display:inline;" id="ifsc">@Html.DisplayFor(model => model.Companies.FirstOrDefault().IFSCcode)</div><br>
                                        </address>
                                    </div>
                                    <div class="col-xs-6 text-right">
                                        <address>
                                            <strong>Amount In Words: </strong> <div style="display:inline;" id="inwords"></div><br>
                                            <strong>For <div style="display:inline;" id="cname">@Html.DisplayFor(model => model.Companies.FirstOrDefault().CompanyName)</div></strong><br>
                                            <br /><br /><br />
                                            <strong>@Html.DisplayFor(model => model.Companies.FirstOrDefault().CompanyOwner) <br> (Authorised Signatory)</strong><br>

                                        </address>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div class="form-group">
    <input type="button" value="Edit Bill" id="btnedit" class="btn btn-default" onclick="editbill()" />
</div>
<div>
    <a asp-page="/Bill/Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    var diffcount=0;
    var counter=0;
    window.onload = function() {
     filladress();
           document.getElementById("deloperation").style.display = "none";
        key('ctrl+1', function(){ document.getElementById("addoperations").click(); return false });
        key('ctrl+2', function(){ document.getElementById("deloperation").click(); return false });
    counter = +($('#lastcount').val())-1;
    resizeel();
    calculateGrandTotal();
     };

    function resizeel()
    {
    for (i = -1; i <= counter; i++)
        {
                    var particulars=document.getElementById('particulars-'+i);
                if(particulars.value.length>0){
                    particulars.style.width = ((particulars.value.length + 1) * 8) + 'px';
                }else{
                  particulars.style.width = ((particulars.getAttribute('placeholder').length + 1) * 8) + 'px';
                }

                var taxableval=document.getElementById('taxableval-'+i);
                if(taxableval.value.length>0){
                    taxableval.style.width = ((taxableval.value.length + 3) * 8) + 'px';
                }else{
                  taxableval.style.width = ((taxableval.getAttribute('placeholder').length + 3) * 8) + 'px';
                }
        }
    }

    function editcont(btnid,count)
    {
     diffcount=$('#pamount-'+count).text().replace(/[^0-9.]/g,'');
      document.getElementById(btnid).style.display = "none";
     document.getElementById("save-"+count).style.display = "inline-block";
      document.getElementById("pp-"+count).style.display = "none";
     document.getElementById("particulars-"+count).style.display = "inline-block";
     document.getElementById("psac-"+count).style.display = "none";
     document.getElementById("saccode-"+count).style.display = "inline-block";
     document.getElementById("ptamount-"+count).style.display = "none";
    document.getElementById("taxableval-"+count).style.display = "inline-block";
    $('#taxableval-'+count).val($('#taxableval-'+count).val().replace(/[^0-9.]/g,''));
    $('#cgst-'+count).val($('#cgst-'+count).val().replace(/[^0-9.]/g,''));
    $('#sgst-'+count).val($('#sgst-'+count).val().replace(/[^0-9.]/g,''));
    $('#pamount-'+count).val($('#pamount-'+count).val().replace(/[^0-9.]/g,''));
    }


    function delcont(btnid,count)
    {
           var options = {};
           options.url = "/Bill/Format1/Edit?id="+count+"&&handler=DeleteBillDetails";
           options.type = "DELETE";
           options.dataType = "html";
           options.beforeSend = function (xhr) {
           xhr.setRequestHeader("MY-XSRF-TOKEN",
           $('input:hidden[name="__RequestVerificationToken"]').val());
           };
           options.success = function (msg) {

            if(msg=='"Deleted Successfully! Remove Row."')
             {
                  document.getElementById("row-"+btnid.substring(4)).style.display = "none";
             }
            else
             {
                alert("Exception occured while handling the return data.");
             }
            };
           options.error = function () {
                alert("Error Occured while deleting.");
            };
       $.ajax(options);
    }


    function savecont(btnid,billid)
    {
            var ttamt=parseFloat($("#pamount-"+btnid.substring(5)).text())-diffcount;

                var options = {};
            options.url = "/Bill/Format1/Edit?id="+billid+"&&damt="+ttamt+"&&handler=UpdateBillDetails";
            options.type = "PUT";


            var obj = {};
            obj.BillDetailsID = billid;
            obj.ParticularsName = $("#particulars-"+btnid.substring(5)).val();
            obj.TaxableValue = $("#taxableval-"+btnid.substring(5)).val();
            obj.CGSTAmount = $("#cgst-"+btnid.substring(5)).text();
            obj.SGSTAmount =  $("#sgst-"+btnid.substring(5)).text();
            obj.Amount =  $("#pamount-"+btnid.substring(5)).text();


             var pinfoa=$("#parti-"+btnid.substring(5)).find('option[value="' + obj.ParticularsName + '"]').attr('id');
                 if(pinfoa==null || pinfoa==="undefined")
                {
                pinfoa=$('#pid-'+btnid.substring(5)).val();
                }
                 $('#pid-'+btnid.substring(5)).val(pinfoa);


            obj.ParticularsID =pinfoa;
            obj.DebtorGroupID =$('#billtoid').val();;
            obj.BillNumber=$('#invoicenum').text();


            options.data = JSON.stringify(obj);

            options.contentType = "application/json";
            options.dataType = "html";

            options.beforeSend = function (xhr) {
                xhr.setRequestHeader("MY-XSRF-TOKEN",
                $('input:hidden[name="__RequestVerificationToken"]').val());
                };
            options.success = function (msg) {
                 var countid=btnid.substring(5);
                    @*$('pp-'+countid).text(''+obj.ParticularsName);
                     $('ptamount-'+countid).text(''+obj.TaxableValue);*@
                     document.getElementById("pp-"+countid).innerHTML=obj.ParticularsName;
                     document.getElementById("ptamount-"+countid).innerHTML=obj.TaxableValue;
                     $('cgst-'+countid).text(''+obj.CGSTAmount);
                     $('sgst-'+countid).text(''+obj.SGSTAmount);
                     $('pamount-'+countid).text(''+obj.Amount);
                 document.getElementById(btnid).style.display = "none";
                 document.getElementById("et-"+billid).style.display = "inline-block";
                 document.getElementById("pp-"+btnid.substring(5)).style.display = "inline-block";
                 document.getElementById("particulars-"+btnid.substring(5)).style.display = "none";
                 document.getElementById("psac-"+btnid.substring(5)).style.display = "inline-block";
                 document.getElementById("saccode-"+btnid.substring(5)).style.display = "none";
                 document.getElementById("ptamount-"+btnid.substring(5)).style.display = "inline-block";
                 document.getElementById("taxableval-"+btnid.substring(5)).style.display = "none";


            };
            options.error = function () {
                alert("Error Occured while updating.");
            };
            $.ajax(options);

    }

    function fillparticulars(pname,idval)
    {

      var dataList = document.getElementById("parti-"+idval);

    var options = {};
    options.url = "/Bill/Format1/Create?str="+pname+"&&handler=Particulars";
    options.type = "GET";
    options.dataType = "json";

    options.success = function (data) {

     $("#parti-"+idval).empty();
    data.forEach(function (element) {

     var option = document.createElement('option');
                option.value = element.particularsName;
             option.id = element.particularsID;
       dataList.appendChild(option);


           });

    };
    options.error = function () {
     var option = document.createElement('option');
                @*// Set the value using the item in the JSON array.*@
          option.value = "Couldn't Fetch Particulars Information";
                @*// Add the <option> element to the <datalist>.*@
       dataList.appendChild(option);
    };
    $.ajax(options);

    }

    function fillvalues(dname)
    {
    var dataList = document.getElementById('tosearch');

    var options = {};
    options.url = "/Bill/Format1/Create?str="+dname+"&&handler=BillTo";
    options.type = "GET";
    options.dataType = "json";
    options.success = function (data) {

     $("#tosearch").empty();
    data.forEach(function (element) {
    @*newInput +="<tr><td>"+element.debtorName+"</td><td>"+element.debtorOutstanding+"</td><td><button style='padding: 0;border: none;background: none;' onclick='delindidet("+element.debtorID+")'><img src='/images/delete.png' alt='delete' height='20px' width='20px' /></button>&nbsp;&nbsp;&nbsp;&nbsp;<a href='#modal_edit' data-toggle='modal' data-did='"+element.debtorID+"' data-dname='"+element.debtorName+"' data-doutstan='"+element.debtorOutstanding+"' data-dgid='"+element.debtorGroupID+"' ><img src='/images/edit.svg' alt='Edit Record' height='20px' width='20px' /></a></td></tr>";*@

     var option = document.createElement('option');
                @*// Set the value using the item in the JSON array.*@
          option.value = element.debtorGroupName;
             option.id = element.debtorGroupID;
                @*// Add the <option> element to the <datalist>.*@
       dataList.appendChild(option);

           });

    };
    options.error = function () {
     var option = document.createElement('option');
                @*// Set the value using the item in the JSON array.*@
          option.value = "Couldn't Fetch Debtor Information";
                @*// Add the <option> element to the <datalist>.*@
       dataList.appendChild(option);
    };
    $.ajax(options);
    }


    function filladress()
    {

     var x = document.getElementById("tosearch");
    var i;
    for (i = 0; i < x.options.length; i++) {
        if(x.options[i].value!= $('#toinfo').val())
        {
            $('#toinfo').val('');
        }
    }

    var dinfoa = $("#tosearch option[value='" + $('#toinfo').val() + "']").attr('id');

    if(dinfoa==null || dinfoa==="undefined")
    {
    dinfoa=$('#billtoid').val();
    }
     $('#billtoid').val(dinfoa);
    var options = {};
    options.url = "/Bill/Format1/Create?id="+dinfoa+"&&handler=BillToDetails";
    options.type = "GET";
    options.dataType = "json";
    options.success = function (data) {
        document.getElementById('toaddress').innerHTML = data.debtorGroupAddress;
        document.getElementById('togstin').innerHTML = data.debtorGSTIN;
    };
    options.error = function () {
     $("#toaddress").val("Couldn't load data");
     $("#togstin").val("Couldn't load data");
    };
    $.ajax(options);

    }

    function fillpdetails(idval)
    {
       var x = document.getElementById("parti-"+idval);
    var i;

    for (i = 0; i < x.options.length; i++) {
        if(x.options[i].value!= $('#particulars'+idval).val())
        {
            $('#particulars'+idval).val('');
        }
    }

    var particulars=document.getElementById('particulars-'+idval);
    if(particulars.value.length>0){
        particulars.style.width = ((particulars.value.length + 1) * 8) + 'px';
    }else{
      particulars.style.width = ((particulars.getAttribute('placeholder').length + 1) * 8) + 'px';
    }
     var pinfoa = $("#parti-"+idval+" option[value='" + $('#particulars-'+idval).val() + "']").attr('id');
    var options = {};
    options.url = "/Bill/Format1/Create?id="+pinfoa+"&&handler=ParticularsDetails";
    options.type = "GET";
    options.dataType = "json";
    options.success = function (data) {
        $("#saccode-"+idval).val(data.sacCode);
        $("#taxableval-"+idval).val(data.amount);
        calcamount(data.amount,idval);
    };
    options.error = function () {
     $("#saccode-"+idval).val("-1");
     $("#taxableval-"+idval).val("-1");
    };
    $.ajax(options);
  }

function calcamount(pamount,idval)
    {
    var taxableval=document.getElementById('taxableval-'+idval);
    if(taxableval.value.length>0){
        taxableval.style.width = ((taxableval.value.length + 3) * 8) + 'px';
    }else{
      taxableval.style.width = ((taxableval.getAttribute('placeholder').length + 3) * 8) + 'px';
    }

    var cgst= (+(pamount)*9)/100;
        var sgst=cgst;
        var total=+pamount+cgst+sgst;
     document.getElementById('cgst-'+idval).innerHTML =cgst.toFixed(2);
    document.getElementById('sgst-'+idval).innerHTML = sgst.toFixed(2);
    document.getElementById('pamount-'+idval).innerHTML = total.toFixed(0);
    calculateGrandTotal();
    }

  function addInput(){
       counter++;
    var rowid='row-'+counter;
       var newRow = $("<tr id='row-"+counter+"'>");
        var cols = "";
         cols+='<td><input id="particulars-' + counter + '" style="width:250px;" placeholder="Particulars.." list="parti-' + counter + '" autocomplete="off" onchange="fillparticulars($(this).val(),' + counter + ');" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" onfocusout="fillpdetails(' + counter + ')"><datalist id="parti-' + counter + '"></datalist></td>';
          cols+='<td class="text-center"><input style="width:65px;" type="number" placeholder="SAC Code.." id="saccode-' + counter + '" /></td>';
             cols+='<td class="text-center"><input style="width:65px;" type="number" placeholder="Amount.." id="taxableval-' + counter + '" onchange="calcamount($(this).val(),' + counter + ');" onpaste="this.onchange();" oninput="this.onchange();" onkeyup="this.onchange();" /></td>';
                cols+= '<td class="text-center" id="cgst-' + counter + '"></td>';
                  cols+='<td class="text-center" id="sgst-' + counter + '"></td>';
                    cols+= '<td class="text-right count-me" id="pamount-' + counter + '"></td>';

     document.getElementById("deloperation").style.display = "inline";
        newRow.append(cols);
        $('#billdet > tbody > tr').eq( counter ).after(newRow);
       // $("table.order-list").append(newRow);


}
    function removeRow()
    {
    var comval= $('#lastcount').val();

        if(counter==comval)
         {
            document.getElementById("deloperation").style.display = "none";
            $('#row-'+counter).remove();
            counter -= 1;
            calculateGrandTotal();
         }
        else
        {
            $('#row-'+counter).remove();
            counter -= 1;
            calculateGrandTotal();
        }
    }

    function calculateGrandTotal() {
    var grandTotal = 0;

    $('tr').each(function () {
   // var sum = 0;
    $(this).find('.count-me').each(function () {
      var combat = $(this).text().replace(/[^0-9.]/g,'');
      if (!isNaN(combat) && combat.length !== 0) {
        grandTotal += parseFloat(combat);
      }
    });

  });

    document.getElementById('grandtotal').innerHTML = '&#8377;'+grandTotal.toFixed(0);
    convertNumberToWords(grandTotal.toFixed(0));
}

function convertNumberToWords(amount) {
    var words = new Array();
    words[0] = '';
    words[1] = 'One';
    words[2] = 'Two';
    words[3] = 'Three';
    words[4] = 'Four';
    words[5] = 'Five';
    words[6] = 'Six';
    words[7] = 'Seven';
    words[8] = 'Eight';
    words[9] = 'Nine';
    words[10] = 'Ten';
    words[11] = 'Eleven';
    words[12] = 'Twelve';
    words[13] = 'Thirteen';
    words[14] = 'Fourteen';
    words[15] = 'Fifteen';
    words[16] = 'Sixteen';
    words[17] = 'Seventeen';
    words[18] = 'Eighteen';
    words[19] = 'Nineteen';
    words[20] = 'Twenty';
    words[30] = 'Thirty';
    words[40] = 'Forty';
    words[50] = 'Fifty';
    words[60] = 'Sixty';
    words[70] = 'Seventy';
    words[80] = 'Eighty';
    words[90] = 'Ninety';
    amount = amount.toString();
    var atemp = amount.split(".");
    var number = atemp[0].split(",").join("");
    var n_length = number.length;
    var words_string = "";
    if (n_length <= 9) {
        var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);
        var received_n_array = new Array();
        for (var i = 0; i < n_length; i++) {
            received_n_array[i] = number.substr(i, 1);
        }
        for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {
            n_array[i] = received_n_array[j];
        }
        for (var i = 0, j = 1; i < 9; i++, j++) {
            if (i == 0 || i == 2 || i == 4 || i == 7) {
                if (n_array[i] == 1) {
                    n_array[j] = 10 + parseInt(n_array[j]);
                    n_array[i] = 0;
                }
            }
        }
        value = "";
        for (var i = 0; i < 9; i++) {
            if (i == 0 || i == 2 || i == 4 || i == 7) {
                value = n_array[i] * 10;
            } else {
                value = n_array[i];
            }
            if (value != 0) {
                words_string += words[value] + " ";
            }
            if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {
                words_string += "Crores ";
            }
            if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {
                words_string += "Lakhs ";
            }
            if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {
                words_string += "Thousand ";
            }
            if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {
                words_string += "Hundred and ";
            } else if (i == 6 && value != 0) {
                words_string += "Hundred ";
            }
        }
        words_string = words_string.split("  ").join(" ");
    }
    //return ;
    document.getElementById('inwords').innerHTML = words_string+'.';
}


    function editbill()
    {
    var countdebout=0;

    var billlid=$('#invoicenum').text();
     var options = {};
    options.url = "/Bill/Format1/Edit?id="+billlid+"&&handler=UpdateBill";
    options.type = "PUT";

            var obj = {};
            obj.BillNumber = billlid;
            obj.BilledTo = document.getElementById('toinfo').value;
            obj.BillAmount = $('#grandtotal').text().substring(1, $('#grandtotal').text().length);
            obj.InvoiceDate = $('#invcdt').val();
            obj.PlaceOfSupply = $('#placeofsup').find(":selected").val();
            obj.DebtorGroupID =  $('#billtoid').val();
            obj.SeriesName =  $('#seriesinfo').val();
            obj.BillDate =  $('#billdate').val();
            obj.BillActNum =  $('#billactnum').val();


            options.data = JSON.stringify(obj);

            options.contentType = "application/json";
            options.dataType = "html";

            options.beforeSend = function (xhr) {
                xhr.setRequestHeader("MY-XSRF-TOKEN",
                $('input:hidden[name="__RequestVerificationToken"]').val());
                };
            options.success = function (msg) {

                     $('#billdet tr').each(function(row, tr){

                     if(typeof($(tr).find('td:eq(0)').find("input").val())!=="undefined")
                      {
                         var comval= $('#lastcount').val();
                         var rowid=$(tr).attr('id').substring(4);
                         if(rowid>=comval)
                         {
                                var options = {};
                                options.url = "/Bill/Format1/Create?handler=InsertBillDetails";
                                options.type = "POST";

                                countdebout+=parseFloat($(tr).find('td:eq(5)').text());
                                var obj = {};
                                obj.ParticularsName =  $(tr).find('td:eq(0)').find("input").val();
                                obj.Amount =  $(tr).find('td:eq(5)').text();
                                obj.CGSTAmount=$(tr).find('td:eq(3)').text();
                                obj.SGSTAmount = $(tr).find('td:eq(4)').text();
                                obj.TaxableValue= $(tr).find('td:eq(2)').find("input").val();
                               var inputid=$(tr).find('td:eq(0)').find("input").val();

                                obj.ParticularsID= $(tr).find('td:eq(0)').find("datalist").find('option[value="' + inputid + '"]').attr('id');

                                obj.BillNumber=$('#invoicenum').text();
                                obj.DebtorGroupID=$('#billtoid').val();

                                options.data = JSON.stringify(obj);
                                options.contentType = "application/json; charset=utf-8";
                                options.dataType = "json";

                                options.beforeSend = function (xhr) {
                                    xhr.setRequestHeader("MY-XSRF-TOKEN",
                                    $('input:hidden[name="__RequestVerificationToken"]').val());
                                };

                                options.success = function (msg) {

                                };
                                options.error = function () {

                                alert("error");
                                };
                                $.ajax(options);
                        }
                      }

                    });
                savedebout(countdebout);
                window.location.pathname="/Bill/Format1/Index";
            };
            options.error = function () {
                alert("Error Occured while updating.");
            };
            $.ajax(options);

}

    function savedebout(debamt)
    {
         var options = {};
            options.url = "/Bill/Format1/Edit?debout="+debamt+"&&dgid="+$('#billtoid').val()+"&&handler=UpdateDebOut";
            options.type = "GET";
            options.dataType = "json";

            options.success = function (data) {

            
            };
            options.error = function () {
            alert("Error Updating Debtor Oustanding Amount");
            };
            $.ajax(options);
    }
</script>